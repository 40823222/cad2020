var tipuesearch = {"pages": [{'title': 'About', 'text': '我的倉儲 : https://github.com/40823222/cad2020 \xa0 \n', 'tags': '', 'url': 'About.html'}, {'title': 'Homework', 'text': '', 'tags': '', 'url': 'Homework.html'}, {'title': 'w1-3', 'text': '零件繪圖、建立網站 \n 分別用:Solidworks、Onshape \n', 'tags': '', 'url': 'w1-3.html'}, {'title': 'SOLIDWORKS', 'text': 'pdf1:SOLIDWORKS 2017 使用1mm 繪製 \n pdf2:SOLIDWORKS 2017 繪製(mm). \n \n \n 1-10 \n \n \n \n 11-20 \n \n \n \n 21-30 \n \n \n \n 31-40 \n \n \n \n \n 41-50 \n \n \n \n', 'tags': '', 'url': 'SOLIDWORKS.html'}, {'title': 'w4-6', 'text': '零件繪製(小組、個人) \n', 'tags': '', 'url': 'w4-6.html'}, {'title': 'Onshape', 'text': 'pdf1:Onshape\xa0使用 1 inch 繪製 \n pdf2:Onshape\xa0繪製(in) \n \n \n 1-10 \n \n \n 11-20 \n \n \n \n 21-30 \n \n \n \n \n 31-40 \n \n \n \n \n 41-50 \n \n \n \n', 'tags': '', 'url': 'Onshape.html'}, {'title': 'w7', 'text': '畫自己學號的零件 \n', 'tags': '', 'url': 'w7.html'}, {'title': 'HW2', 'text': '\n \n \n \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'w8', 'text': '下載並使用tcc、零件繪圖(小組、個人)、使用RoKiSim \n \n', 'tags': '', 'url': 'w8.html'}, {'title': 'tcc', 'text': '修改start.bat裡的程式碼 \n set path_portablegit=%Disk%:\\Portablegit\\bin; set path_julia=%Disk%:\\julia-1.5.2\\bin; set path_tcc=%Disk%:\\tcc\\;   path=%Disk%:;%path_python%;%path_portablegit%;%path_julia%;%path_tcc%;%path%; \n \n \n 重新開啟start.bat \n 在黑窗輸入tcc，出現下圖代表成功 \n \n \n 打開資料夾的cpp.properties 拉到白窗 \n \n \n 找到476行，並修改 \n ccopts=-pedantic -Os #cc=g++ $(ccopts) -c $(FileNameExt) -o $(FileName).o #ccc=gcc $(ccopts) -c $(FileNameExt) -o $(FileName).o cc=y:/tcc/tcc.exe -run ccc=y:/tcc/tcc.exe -run   make.command=make command.compile.*.c=$(ccc) -std=c99 command.build.*.c=$(make.command) command.build.*.h=$(make.command) command.clean.*.c=$(make.command) clean command.clean.*.h=$(make.command) clean command.go.*.c=$(cc) $(FileNameExt) #command.go.*.c=./$(FileName) # To make the Go command both compile (if needed) and execute, use this setting: \n \n 案save \n 測試 \n \n', 'tags': '', 'url': 'tcc.html'}, {'title': 'HW3', 'text': '\n 試用RokiSim \n \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'w9', 'text': '零件繪圖、下載Pyslvs_UI \n \n', 'tags': '', 'url': 'w9.html'}, {'title': 'Pyslvs_UI', 'text': '使用Pyslvs_UI \n \n \n \n \n', 'tags': '', 'url': 'Pyslvs_UI.html'}, {'title': 'w10-18', 'text': '進度:12/04 使用gitter進行討論，並錄製過程和截圖 \n \xa0 \xa0 \xa0 \xa012/11 討論並投票圖檔的版本 \n \xa0 \xa0 \xa0 \xa012/24 修改圖檔和模擬 \n \xa0 \xa0 \xa0 \xa001/07 程式模擬和做動模擬 \n', 'tags': '', 'url': 'w10-18.html'}, {'title': '12.04', 'text': '\n \n \n', 'tags': '', 'url': '12.04.html'}, {'title': '12.11', 'text': '\n \n', 'tags': '', 'url': '12.11.html'}, {'title': '12.24', 'text': '', 'tags': '', 'url': '12.24.html'}, {'title': '01.07', 'text': '\n \n', 'tags': '', 'url': '01.07.html'}, {'title': '設定ssh', 'text': '\n 一、製作金鑰 \n 點選資料夾的Portablegit>bin>sh.exe \n \n 輸入ssh-keygen -t rsa -b 4096 -C "40823222" \n \n 案enter>輸入/y/tmp/id_rsa>案2次enter \n \n \n 將start移到白窗 並新增 \n set GIT_HOME=%Disk%:\\Portablegit\\bin\\ set GIT_SSH=%Disk%:\\putty\\plink.exe \n \n 打開fall2020資料夾>data>tmp>cad2020\xa0 \n 打開隱藏的項目 .git資料夾，把config移到白窗 \n \n 新增[remote "origin"]裡的url= git@github.com:40823222/cad2020.git \n file>save \n 打開putty資料的puttygen.exe \n \n 點load，找到id_rsa \n 案是>save private key>案是>輸入學號 \n \n 打開putty.exe \n \n 在Host Name和Save Sessions打github.com案save \n \n 設定proxy，若是使用自家網路、手機網路選None) \n \n 打開SSH裡面的Auth \n 選擇金鑰檔案(.ppk) \n 回到session點選save再open \n \n \n 在home新增.ssh資料夾 \n 輸入指令並複製到白窗另存config \n \n ProxyCommand y:/putty/plink.exe github.com %h %p   Host github.com  User git  Port 22  Hostname github.com    TCPKeepAlive yes  IdentitiesOnly yes \n \n 到倉儲網頁上的Settings新增金鑰 \n 點選New SSH key \n \n \n 到tmp找到id_rsa.pub並用白窗開啟，複製內容到key \n \n \n 案Add SSH key \n \n \n \n \n', 'tags': '', 'url': '設定ssh.html'}]};